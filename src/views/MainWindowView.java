package views;

import java.text.SimpleDateFormat;
import java.util.Vector;

import javax.swing.JTable;

import controllers.MainWindowController;

import main.Global;
import main.PMViewer;
import models.FilterTableModel;
import models.Language;
import models.Message;

/**
 * 
 * @author Robert Heim
 */
@SuppressWarnings("serial")
public class MainWindowView extends javax.swing.JFrame {
	private javax.swing.JButton btnClear;
	private javax.swing.JButton btnFilter;
	private javax.swing.JLabel labelDateFrom;
	private javax.swing.JLabel labelDateTo;
	private javax.swing.JLabel labelPath;
	private javax.swing.JLabel labelSender;
	private javax.swing.JLabel labelSubject;
	private javax.swing.JMenuBar menuBarMain;
	private javax.swing.JMenu menuHelp;
	private javax.swing.JMenuItem menuItemAbout;
	private javax.swing.JMenuItem menuItemExit;
	private javax.swing.JMenuItem menuItemOpenFolder;
	private javax.swing.JMenu menuPMViewer;
	private javax.swing.JPanel panelFilter;
	private javax.swing.JPanel panelMessages;
	private javax.swing.JScrollPane scrollPaneMessages;
	private javax.swing.JScrollPane scrollPaneOverview;
	private javax.swing.JTable tableOverview;
	private javax.swing.JTextArea textAreaMessages;
	private javax.swing.JTextField textDateFrom;
	private javax.swing.JTextField textDateTo;
	private javax.swing.JTextField textPath;
	private javax.swing.JTextField textSender;
	private javax.swing.JTextField textSubject;
	private Vector<Message> messages;

	/** Creates new form MainWindow */
	public MainWindowView(String frameName, Vector<Message> messages) {
		super(frameName);
		initComponents();
		setMessages(messages);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {
		Language lang = PMViewer.getInstance().getLanguage();

		MainWindowController mainWindowController = PMViewer.getInstance()
				.getMainWindowController();

		panelFilter = new javax.swing.JPanel();
		labelSubject = new javax.swing.JLabel();
		labelSender = new javax.swing.JLabel();
		labelPath = new javax.swing.JLabel();
		labelDateFrom = new javax.swing.JLabel();
		labelDateTo = new javax.swing.JLabel();
		textSubject = new javax.swing.JTextField();
		textSender = new javax.swing.JTextField();
		textPath = new javax.swing.JTextField();
		btnFilter = new javax.swing.JButton();
		btnClear = new javax.swing.JButton();
		textDateFrom = new javax.swing.JTextField();
		textDateTo = new javax.swing.JTextField();
		scrollPaneOverview = new javax.swing.JScrollPane();
		tableOverview = new javax.swing.JTable();
		panelMessages = new javax.swing.JPanel();
		scrollPaneMessages = new javax.swing.JScrollPane();
		textAreaMessages = new javax.swing.JTextArea();
		menuBarMain = new javax.swing.JMenuBar();
		menuPMViewer = new javax.swing.JMenu();
		menuItemOpenFolder = new javax.swing.JMenuItem();
		menuItemExit = new javax.swing.JMenuItem();
		menuHelp = new javax.swing.JMenu();
		menuItemAbout = new javax.swing.JMenuItem();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		panelFilter.setBorder(javax.swing.BorderFactory.createTitledBorder(lang
				.getTranslation("BASIC", "FILTER")));

		labelSubject.setText(lang.getTranslation("BASIC", "SUBJECT") + ":");
		labelSender.setText(lang.getTranslation("BASIC", "SENDER") + ":");
		labelPath.setText(lang.getTranslation("BASIC", "PATH") + ":");

		labelDateFrom.setText(lang.getTranslation("BASIC", "DATE_FROM") + " ("
				+ Global.PMVIEWER_FILTER_INPUT_DATE_FORMAT + ")" + ":");
		labelDateTo.setText(lang.getTranslation("BASIC", "DATE_TO") + " ("
				+ Global.PMVIEWER_FILTER_INPUT_DATE_FORMAT + ")" + ":");

		btnFilter.setText(lang.getTranslation("BASIC", "FILTER"));
		btnFilter.setActionCommand("filter");
		btnFilter.addActionListener(mainWindowController);

		btnClear.setText(lang.getTranslation("BASIC", "CLEAR"));
		btnClear.setActionCommand("clear");
		btnClear.addActionListener(mainWindowController);

		javax.swing.GroupLayout panelFilterLayout = new javax.swing.GroupLayout(
				panelFilter);
		panelFilter.setLayout(panelFilterLayout);
		panelFilterLayout
				.setHorizontalGroup(panelFilterLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								panelFilterLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(
																panelFilterLayout
																		.createSequentialGroup()
																		.addGroup(
																				panelFilterLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING,
																								false)
																						.addComponent(
																								labelDateFrom,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.addComponent(
																								labelDateTo,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.addComponent(
																								labelPath,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.addComponent(
																								labelSender,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE)
																						.addComponent(
																								labelSubject,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE))
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addGroup(
																				panelFilterLayout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(
																								textSender,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								246,
																								Short.MAX_VALUE)
																						.addComponent(
																								textSubject,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								246,
																								Short.MAX_VALUE)
																						.addComponent(
																								textPath,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								246,
																								Short.MAX_VALUE)
																						.addGroup(
																								panelFilterLayout
																										.createParallelGroup(
																												javax.swing.GroupLayout.Alignment.TRAILING,
																												false)
																										.addComponent(
																												textDateTo,
																												javax.swing.GroupLayout.Alignment.LEADING)
																										.addComponent(
																												textDateFrom,
																												javax.swing.GroupLayout.Alignment.LEADING,
																												javax.swing.GroupLayout.DEFAULT_SIZE,
																												78,
																												Short.MAX_VALUE))))
														.addGroup(
																panelFilterLayout
																		.createSequentialGroup()
																		.addComponent(
																				btnFilter)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnClear)))
										.addContainerGap()));
		panelFilterLayout
				.setVerticalGroup(panelFilterLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								panelFilterLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																labelSubject)
														.addComponent(
																textSubject,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																labelSender)
														.addComponent(
																textSender,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(labelPath)
														.addComponent(
																textPath,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																labelDateFrom)
														.addComponent(
																textDateFrom,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																labelDateTo)
														.addComponent(
																textDateTo,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED,
												58, Short.MAX_VALUE)
										.addGroup(
												panelFilterLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(btnFilter)
														.addComponent(btnClear))
										.addContainerGap()));

		scrollPaneOverview.setBorder(javax.swing.BorderFactory
				.createTitledBorder(lang.getTranslation("BASIC", "OVERVIEW")));

		tableOverview.setAutoCreateRowSorter(true);
		tableOverview.setModel(new FilterTableModel());
		tableOverview.getSelectionModel().addListSelectionListener(
				mainWindowController);
		tableOverview.setMinimumSize(new java.awt.Dimension(60, 64));

		scrollPaneOverview.setViewportView(tableOverview);

		panelMessages.setBorder(javax.swing.BorderFactory
				.createTitledBorder(lang.getTranslation("BASIC", "MESSAGES")));

		textAreaMessages.setColumns(20);
		textAreaMessages.setRows(5);
		textAreaMessages.setEditable(false);
		textAreaMessages.setLineWrap(true);
		textAreaMessages.setWrapStyleWord(true);
		scrollPaneMessages.setViewportView(textAreaMessages);

		javax.swing.GroupLayout panelMessagesLayout = new javax.swing.GroupLayout(
				panelMessages);
		panelMessages.setLayout(panelMessagesLayout);
		panelMessagesLayout
				.setHorizontalGroup(panelMessagesLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								panelMessagesLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(
												scrollPaneMessages,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												448, Short.MAX_VALUE)
										.addContainerGap()));
		panelMessagesLayout
				.setVerticalGroup(panelMessagesLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								panelMessagesLayout
										.createSequentialGroup()
										.addComponent(
												scrollPaneMessages,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												236, Short.MAX_VALUE)
										.addContainerGap()));

		// MENU
		menuPMViewer.setText(lang.getTranslation("BASIC", "PMVIEWER"));

		menuItemOpenFolder.setText(lang.getTranslation("BASIC", "OPEN_FOLDER"));
		menuItemOpenFolder.addActionListener(mainWindowController);
		menuItemOpenFolder.setActionCommand("open");
		menuPMViewer.add(menuItemOpenFolder);

		menuItemExit.setText(lang.getTranslation("BASIC", "EXIT"));
		menuItemExit.addActionListener(mainWindowController);
		menuItemExit.setActionCommand("exit");
		menuPMViewer.add(menuItemExit);

		menuBarMain.add(menuPMViewer);

		menuHelp.setText(lang.getTranslation("BASIC", "HELP"));

		menuItemAbout.setText(lang.getTranslation("BASIC", "ABOUT"));
		menuItemAbout.addActionListener(mainWindowController);
		menuItemAbout.setActionCommand("about");
		menuHelp.add(menuItemAbout);

		menuBarMain.add(menuHelp);

		setJMenuBar(menuBarMain);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								layout
										.createSequentialGroup()
										.addGroup(
												layout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																scrollPaneOverview,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																820,
																Short.MAX_VALUE)
														.addGroup(
																javax.swing.GroupLayout.Alignment.LEADING,
																layout
																		.createSequentialGroup()
																		.addComponent(
																				panelFilter,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				panelMessages,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)))
										.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(
				javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup().addGroup(
						layout.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING,
								false).addComponent(panelMessages,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE).addComponent(panelFilter,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE,
								Short.MAX_VALUE)).addPreferredGap(
						javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(scrollPaneOverview,
								javax.swing.GroupLayout.DEFAULT_SIZE, 161,
								Short.MAX_VALUE).addContainerGap()));

		pack();
		setLocationRelativeTo(null);
	}

	public void setMessages(Vector<Message> messages) {
		this.messages = messages;
		updateTable();
	}

	private void updateTable() {
		((FilterTableModel) tableOverview.getModel()).update(messages);
		tableOverview.updateUI();
	}

	public void updateMessagesView(Vector<Message> messages) {
		String msgs = "";
		SimpleDateFormat sdf = new SimpleDateFormat(Global.PMVIEWER_DATE_FORMAT);

		for (Message m : messages) {
			msgs += "MESSAGE\n" + "=======\n" + "## Date   : "
					+ sdf.format(m.getDate()) + "\n" + "## Subject: "
					+ m.getSubject() + "\n" + "## Sender : " + m.getSender()
					+ "\n" + "## Message:\n" + m.getMessage() + "\n"
					+ "-----------------------------------------------------\n"
					+ "\n";
		}
		textAreaMessages.setText(msgs);
	}

	public void clearMessages() {
		// TODO Folder open implementieren/testen
		tableOverview.clearSelection();
		((FilterTableModel) tableOverview.getModel())
				.update(new Vector<Message>());
		tableOverview.updateUI();
	}

	public void setPathText(String s) {
		textPath.setText(s);
	}

	public String getPathText() {
		return textPath.getText();
	}

	public void setSubjectText(String s) {
		textSubject.setText(s);
	}

	public String getSubjectText() {
		return textSubject.getText();
	}

	public void setSenderText(String s) {
		textSender.setText(s);
	}

	public String getSenderText() {
		return textSender.getText();
	}

	public void setDateFromText(String s) {
		textDateFrom.setText(s);
	}

	public String getDateFromText() {
		return textDateFrom.getText();
	}

	public void setDateToText(String s) {
		textDateTo.setText(s);
	}

	public String getDateToText() {
		return textDateTo.getText();
	}

	public JTable getTable() {
		return tableOverview;
	}
}
